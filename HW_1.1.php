<?php
    /* 1. Установить программное обеспечение: веб-сервер, базу данных, 
    интерпретатор, текстовый редактор. Проверить, что все работает правильно.

    Установил на свою ОС open_server_panel_5_4_0, все работает, протестировал на 
    практике ниже*/

    /* 2. Выполнить примеры из методички и разобраться, как это работает.*/

    //Переменные и их вывод на экран через браузер:
    echo "Hellow, World!<br>";
    $name = "GeekBrainsUser";
    echo "Hellow, $name!<br>";
    define('MyConst',100); // константа 
    echo MyConst;

    // Кодировка чисел:
    $int10 = 42;
    $int2 = 0b101010;
    $int8 = 052;
    $int16 = 0x2A;
    echo "<br> Десятеричная система $int10 <br>";
    echo "Двоичная система $int2 <br>";
    echo "Восьмеричная система $int8 <br>";
    echo "Шестнадцатиричная система $int16 <br>";

    // Размер числа с плавающей точкой:
    $precise1 = 1.5;
    $precise2 = 1.5e4;
    $precise3 = 6E-8;
    echo "$precise1 | $precise2 | $precise3 <br>";

    // Вывод переменных при использовании '__' и "___" (разное поведение):
    $a = 1;
    echo "$a<br>";
    echo '$a<br>';

    // Возможность присвоить переменной иной тип данных вручную (Динамическая типизация):
    $a = 10;
    $b = (boolean) $b; // из целого числа в логический тип

    // Конкатенация:
    $a = 'Hellow,';
    $b = 'World!<br>';
    $c = $a . $b;
    echo $c;

    // Математические операции с переменными:
    $a = 4;
    $b = 5;
    echo $a + $b . '<br>'; // сложение
    echo $a * $b . '<br>'; // умножение
    echo $a - $b . '<br>'; // вычитание
    echo $a / $b . '<br>'; // деление
    echo $a % $b . '<br>'; // остаток от деления
    echo $a ** $b . '<br>'; // возведение в степень
    $a = 4;
    $b = 5;
    $a += $b;
    echo 'a =' . $a . '<br>';
    $a = 0;
    echo $a++ . '<br>'; // Постинкремент
    echo ++$a . '<br>'; // Преинкремент
    echo $a-- . '<br>'; // Постдекремент
    echo --$a . '<br>'; // Предекремент

    // Операции сравнения:
    $a = 4;
    $b = 5;
    var_dump($a == $b); // Сравнение по значению
    var_dump($a === $b); // Сравнение по значению и типу (строгое сравнение)
    var_dump($a > $b); // Больше
    var_dump($a < $b); // Меньше
    var_dump($a <> $b); // Не равно
    var_dump($a != $b); // Не равно
    var_dump($a !== $b); // Не равно без приведения типов
    var_dump($a <= $b); // Меньше или равно
    var_dump($a >= $b); // Больше или равно

    /*3. Объяснить, как работает данный код:*/

    $a = 5;
    $b = '05';
    var_dump($a == $b);         //Почему true? При нестрогом сравнении 
    //программа приводит переменные к одному типу данных, по итогу значения будут одинаковыми ('05' == '05').
    var_dump((int)'012345');     // Почему 12345? Строке '12345' вручную присвоено числовой тип данных установив в круглых скобках (int).
    var_dump((float)123.0 === (int)123.0); // Почему false? Тип с плавающей точкой и числовой тип не равны, по этому false.
    var_dump((int)0 === (int)'hello, world'); // Переведенная в числовой типа строка 'hello, world' интерпретируется программой, как 0



    /*4. Используя имеющийся HTML-шаблон, сделать так, чтобы главная страница генерировалась через PHP. Создать блок переменных 
    в начале страницы. Сделать так, чтобы h1, title и текущий год генерировались в блоке контента из созданных переменных.*/

    $H_1 = '<h1>Заголовок</h1>';
    $title = '<title>HW_1</title>';
    $year_21 = '2021 год';
?>

<html>
    <head>
        <?php echo $title;?>
    </head>
    <body>
        <?php echo $H_1;?>
        <?php echo $year_21;?>
        <br>
    </body>
</html>

   
<?php
    /*5. *Используя только две переменные, поменяйте их значение местами. Например,
    если a = 1, b = 2, надо, чтобы получилось b = 1, a = 2. Дополнительные переменные использовать нельзя.*/
    $a = 1;
    $b = 2;
    echo 'Переменная $а была равна 1, теперь $a=' . ++$a . '<br>';
    echo 'Переменная $b была равна 2, теперь $b=' . --$b . '<br>';
?>

// ничего не менял, разбираюсь с  GIT
